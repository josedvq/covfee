"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[710],{2155:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>f,contentTitle:()=>c,default:()=>b,frontMatter:()=>u,metadata:()=>m,toc:()=>y});var n=i(4848),o=i(8453),s=i(6025),r=i(6540);const a={$schema:"http://json-schema.org/draft-07/schema#",definitions:{BaseNodeSpec:{additionalProperties:!1,properties:{countdown:{default:0,description:"Seconds countdown after start condition met.",title:"countdown",type:"number"},instructions:{description:"Instructions to be displayed for the node",title:"instructions",type:"string"},instructions_type:{default:"'default'",description:"How the instructions will be displayed",enum:["default","popped"],title:"instructions_type",type:"string"},max_submissions:{default:0,description:"Maximum number of submissions a user can make for the task.",title:"max_submissions",type:"number"},n_pause:{description:"If the number of subjects is n_pause or less, the task will be paused",title:"n_pause",type:"number"},n_start:{description:"Number of jorneys required to start task",title:"n_start",type:"number"},name:{title:"name",type:"string"},prerequisite:{default:"False",description:"Node is marked as a prerrequisite\nPrerrequisite nodes must be completed before the rests of the nodes in the HIT are revealed.",title:"prerequisite",type:"boolean"},required:{default:"True",description:"If true, this node must have a valid submission before the HIT can be submitted",title:"required",type:"boolean"},timer:{description:"Time to complete the task",title:"timer",type:"number"},timer_empty:{description:"Empty timer is started everytime the task is empty (no journeys online)\nIf the timer reaches zero, the task is set to finished state.",title:"timer_empty",type:"number"},timer_pausable:{description:"If true, the timer will pause when the task is paused.",title:"timer_pausable",type:"boolean"},timer_pause:{description:"Pause timer is started every time the task enters paused state\nIf timer reaches zero, the task is set to finished state.",title:"timer_pause",type:"number"},useSharedState:{description:"If true, the task state will be synced between clients.\nThis applies both to multiple clients in the same journey and across journeys.\nInternally covfee uses socketio to synchronize task state.",title:"useSharedState",type:"boolean"},wait_for_ready:{description:"If true, all journeys must click ready to start the task",title:"wait_for_ready",type:"boolean"}},required:["name"],title:"BaseNodeSpec",type:"object"},BasicAudio:{description:"Identifies a single audio file",properties:{type:{default:"audio",enum:["audio"],title:"type",type:"string"},url:{description:"URL to hosted video file",title:"url",type:"string"}},required:["type","url"],title:"BasicAudio",type:"object",additionalProperties:!1},BasicVideo:{description:"Identifies a single video file",properties:{canMute:{description:"User is able to mute the video",title:"canMute",type:"boolean"},fps:{description:"Frames per second of the video file.\nSome tasks use it to collect data once per frame.",title:"fps",type:"number"},muted:{description:"Video should be played without audio",title:"muted",type:"boolean"},speed:{description:"Speed of the video in multiples of real time (1x)\n0 will allow the user to change speed (starting at 1x)",title:"speed",type:"number"},type:{default:"video",enum:["video"],title:"type",type:"string"},url:{description:"URL to hosted video file",title:"url",type:"string"}},required:["type","url"],title:"BasicVideo",type:"object",additionalProperties:!1},CheckboxGroupOption:{properties:{label:{title:"label",type:"string"},value:{title:"value",type:["string","number"]}},required:["label","value"],title:"CheckboxGroupOption",type:"object"},CheckboxGroupSpec:{description:"Props for the antd checkbox group",properties:{defaultValue:{items:{type:"string"},title:"defaultValue",type:"array"},inputType:{default:"Checkbox.Group",enum:["Checkbox.Group"],title:"inputType",type:"string"},options:{items:{$ref:"#/definitions/CheckboxGroupOption"},title:"options",type:"array"}},required:["inputType","options"],title:"CheckboxGroupSpec",type:"object",additionalProperties:!1},ContinuousAnnotationTaskSpec:{additionalProperties:!1,properties:{annotations:{items:{properties:{interface:{enum:["Binary","GTrace","RankTrace"],title:"interface",type:"string"},name:{title:"name",type:"string"}},required:["interface","name"],type:"object"},title:"annotations",type:"array"},countdown:{default:0,description:"Seconds countdown after start condition met.",title:"countdown",type:"number"},instructions:{description:"Instructions to be displayed for the node",title:"instructions",type:"string"},instructions_type:{default:"'default'",description:"How the instructions will be displayed",enum:["default","popped"],title:"instructions_type",type:"string"},max_submissions:{default:0,description:"Maximum number of submissions a user can make for the task.",title:"max_submissions",type:"number"},media:{properties:{type:{enum:["video"],title:"type",type:"string"},url:{title:"url",type:"string"}},required:["type","url"],title:"media",type:"object"},n_pause:{description:"If the number of subjects is n_pause or less, the task will be paused",title:"n_pause",type:"number"},n_start:{description:"Number of jorneys required to start task",title:"n_start",type:"number"},name:{title:"name",type:"string"},prerequisite:{default:"False",description:"Node is marked as a prerrequisite\nPrerrequisite nodes must be completed before the rests of the nodes in the HIT are revealed.",title:"prerequisite",type:"boolean"},required:{default:"True",description:"If true, this node must have a valid submission before the HIT can be submitted",title:"required",type:"boolean"},timer:{description:"Time to complete the task",title:"timer",type:"number"},timer_empty:{description:"Empty timer is started everytime the task is empty (no journeys online)\nIf the timer reaches zero, the task is set to finished state.",title:"timer_empty",type:"number"},timer_pausable:{description:"If true, the timer will pause when the task is paused.",title:"timer_pausable",type:"boolean"},timer_pause:{description:"Pause timer is started every time the task enters paused state\nIf timer reaches zero, the task is set to finished state.",title:"timer_pause",type:"number"},type:{default:"ContinuousAnnotationTask",enum:["ContinuousAnnotationTask"],title:"type",type:"string"},useSharedState:{description:"If true, the task state will be synced between clients.\nThis applies both to multiple clients in the same journey and across journeys.\nInternally covfee uses socketio to synchronize task state.",title:"useSharedState",type:"boolean"},userCanAdd:{title:"userCanAdd",type:"boolean"},wait_for_ready:{description:"If true, all journeys must click ready to start the task",title:"wait_for_ready",type:"boolean"}},required:["annotations","media","name","type","userCanAdd"],title:"ContinuousAnnotationTaskSpec",type:"object"},"FieldSpec<InputSpec>":{properties:{condition:{description:"If given the field will only be available when the condition is true",title:"condition",type:"string"},input:{description:"input props for a single input element",title:"input",oneOf:[{properties:{checkedChildren:{description:"The text to be shown when the state is checked",title:"checkedChildren",type:"string"},defaultChecked:{default:!1,description:"Initial state",title:"defaultChecked",type:"boolean"},inputType:{default:"Switch",enum:["Switch"],title:"inputType",type:"string"},size:{default:"default",description:"The size of the Switch",enum:["default","small"],title:"size",type:"string"},unCheckedChildren:{description:"The text to be shown when the state is unchecked",title:"unCheckedChildren",type:"string"}},required:["inputType"],type:"object",additionalProperties:!1},{properties:{allowClear:{default:!0,description:"Whether to allow clear when click again",title:"allowClear",type:"boolean"},allowHalf:{default:!1,description:"Allow selection of a half-start",title:"allowHalf",type:"boolean"},character:{default:"StarFilled",description:"Custom character to use in place of star",title:"character",type:"string"},count:{default:5,description:"Number of characters (default: 5)",title:"count",type:"number"},defaultValue:{default:0,description:"Default value selected",title:"defaultValue",type:"number"},inputType:{default:"Rate",enum:["Rate"],title:"inputType",type:"string"},tooltips:{description:"Customize tooltip for each character",items:{type:"string"},title:"tooltips",type:"array"}},required:["inputType"],type:"object",additionalProperties:!1},{properties:{allowClear:{default:!1,description:"Show clear button",title:"allowClear",type:"boolean"},autoClearSearchValue:{default:!0,description:"Whether the current search will be cleared on selecting an item. Only applies when mode is set to multiple or tags",title:"autoClearSearchValue",type:"boolean"},bordered:{default:!0,description:"Adds border style",title:"bordered",type:"boolean"},defaultActiveFirstOption:{default:!0,description:"Whether active first option by default",title:"defaultActiveFirstOption",type:"boolean"},defaultOpen:{description:"Initial open state of dropdown",title:"defaultOpen",type:"boolean"},defaultValue:{anyOf:[{items:{type:"string"},type:"array"},{items:{type:"number"},type:"array"},{type:["string","number"]}],description:"Initial selected option",title:"defaultValue"},filterOption:{default:!0,description:"If true, filter options by input",title:"filterOption",type:"boolean"},inputType:{default:"Select",enum:["Select"],title:"inputType",type:"string"},labelInValue:{default:!1,description:"Whether to embed label in value, turn the format of value from string to { value: string, label: ReactNode }",title:"labelInValue",type:"boolean"},listHeight:{default:256,description:"Config popup height",title:"listHeight",type:"number"},maxTagCount:{anyOf:[{enum:["responsive"],type:"string"},{type:"number"}],description:"Max tag count to show. responsive will cost render performance",title:"maxTagCount"},maxTagTextLength:{description:"Max tag text length to show",title:"maxTagTextLength",type:"number"},mode:{description:"Set mode of Select",enum:["multiple","tags"],title:"mode",type:"string"},optionFilterProp:{default:"value",description:"Which prop value of option will be used for filter if filterOption is true. If options is set, it should be set to label",title:"optionFilterProp",type:"string"},optionLabelProp:{default:"children",description:"Which prop value of option will render as content of select",title:"optionLabelProp",type:"string"},options:{description:"Select options.",title:"options"},showArrow:{description:"Whether to show the drop-down arrow",title:"showArrow",type:"boolean"},showSearch:{default:!1,description:"Whether show search input in single mode",title:"showSearch",type:"boolean"},size:{default:"middle",description:"Size of Select input",enum:["large","middle","small"],title:"size",type:"string"},tokenSeparators:{description:"Separator used to tokenize on tag and multiple mode",items:{type:"string"},title:"tokenSeparators",type:"array"},virtual:{default:!0,description:"Disable virtual scroll when set to false",title:"virtual",type:"boolean"}},required:["inputType","options"],type:"object",additionalProperties:!1},{$ref:"#/definitions/CheckboxGroupSpec"},{$ref:"#/definitions/InputFieldSpec"},{$ref:"#/definitions/InputNumberSpec"},{$ref:"#/definitions/TextareaSpec"},{$ref:"#/definitions/RadioSpec"},{$ref:"#/definitions/SliderSpec"}],discriminator:{propertyName:"inputType"},required:["inputType"]},label:{description:"Label for the field.\nUsually displayed next to or on top of the field.",title:"label",type:"string"},name:{description:"Name of the field.\nThe results will refer to the field by this name.",title:"name",type:"string"},required:{description:"If true the field will be required to be filled before submission.",title:"required",type:"boolean"},tooltip:{description:"Text for a tooltip with more information",title:"tooltip",type:"string"}},required:["input","label","name"],title:"FieldSpec<InputSpec>",type:"object"},"FormSpec<InputSpec>":{properties:{fields:{description:"For field specification",items:{$ref:"#/definitions/FieldSpec<InputSpec>"},title:"fields",type:"array"},layout:{description:"Layout of the form",enum:["horizontal","inline","vertical"],title:"layout",type:"string"}},required:["fields"],title:"FormSpec<InputSpec>",type:"object"},HitSpec:{additionalProperties:!1,properties:{config:{$ref:"#/definitions/completionInfo",description:"HIT configuration and other params",title:"config"},extra:{description:"Extra hit-level information to display",title:"extra",oneOf:[{$ref:"#/definitions/MarkdownContentRawSpec"},{$ref:"#/definitions/MarkdownContentLinkSpec"}],discriminator:{propertyName:"type"},required:["type"]},id:{description:"unique ID of the hit",title:"id",type:"string"},journeys:{$ref:"#/definitions/JourneySpec",description:"list of journeys in the HIT",title:"journeys"},name:{description:"HIT name (for display)",title:"name",type:"string"},nodes:{description:"list of tasks in the HIT",items:{description:"One of the supported task specs",oneOf:[{$ref:"#/definitions/ContinuousAnnotationTaskSpec"},{$ref:"#/definitions/IncrementCounterTaskSpec"},{$ref:"#/definitions/InstructionsTaskSpec"},{$ref:"#/definitions/QuestionnaireTaskSpec"},{$ref:"#/definitions/TutorialTaskSpec"},{$ref:"#/definitions/VideocallTaskSpec"}],discriminator:{propertyName:"type"},required:["type"]},title:"nodes",type:"array"},repeat:{description:"number of copies or instances of the HIT",title:"repeat",type:"number"}},required:["id","journeys","name","nodes"],title:"HitSpec",type:"object"},IncrementCounterTaskSpec:{additionalProperties:!1,properties:{countdown:{default:0,description:"Seconds countdown after start condition met.",title:"countdown",type:"number"},instructions:{description:"Instructions to be displayed for the node",title:"instructions",type:"string"},instructions_type:{default:"'default'",description:"How the instructions will be displayed",enum:["default","popped"],title:"instructions_type",type:"string"},max_submissions:{default:0,description:"Maximum number of submissions a user can make for the task.",title:"max_submissions",type:"number"},n_pause:{description:"If the number of subjects is n_pause or less, the task will be paused",title:"n_pause",type:"number"},n_start:{description:"Number of jorneys required to start task",title:"n_start",type:"number"},name:{title:"name",type:"string"},prerequisite:{default:"False",description:"Node is marked as a prerrequisite\nPrerrequisite nodes must be completed before the rests of the nodes in the HIT are revealed.",title:"prerequisite",type:"boolean"},required:{default:"True",description:"If true, this node must have a valid submission before the HIT can be submitted",title:"required",type:"boolean"},timer:{description:"Time to complete the task",title:"timer",type:"number"},timer_empty:{description:"Empty timer is started everytime the task is empty (no journeys online)\nIf the timer reaches zero, the task is set to finished state.",title:"timer_empty",type:"number"},timer_pausable:{description:"If true, the timer will pause when the task is paused.",title:"timer_pausable",type:"boolean"},timer_pause:{description:"Pause timer is started every time the task enters paused state\nIf timer reaches zero, the task is set to finished state.",title:"timer_pause",type:"number"},type:{default:"IncrementCounterTask",enum:["IncrementCounterTask"],title:"type",type:"string"},useSharedState:{description:"If true, the task state will be synced between clients.\nThis applies both to multiple clients in the same journey and across journeys.\nInternally covfee uses socketio to synchronize task state.",title:"useSharedState",type:"boolean"},wait_for_ready:{description:"If true, all journeys must click ready to start the task",title:"wait_for_ready",type:"boolean"}},required:["name","type"],title:"IncrementCounterTaskSpec",type:"object"},InputFieldSpec:{description:"Props for the antd input field",properties:{allowClear:{title:"allowClear",type:"boolean"},bordered:{title:"bordered",type:"boolean"},defaultValue:{title:"defaultValue",type:"string"},inputType:{default:"Input",enum:["Input"],title:"inputType",type:"string"},maxLength:{title:"maxLength",type:"number"},minLength:{title:"minLength",type:"number"},size:{enum:["large","middle","small"],title:"size",type:"string"},type:{enum:["checkbox","color","date","datetime-local","email","month","number","password","radio","range","string","tel","text","time","url","week"],title:"type",type:"string"}},required:["inputType"],title:"InputFieldSpec",type:"object",additionalProperties:!1},InputNumberSpec:{description:"Props for the antd input number field",properties:{controls:{title:"controls",type:"boolean"},decimalSeparator:{title:"decimalSeparator",type:"string"},defaultValue:{title:"defaultValue",type:"number"},inputType:{default:"InputNumber",enum:["InputNumber"],title:"inputType",type:"string"},max:{title:"max",type:"number"},min:{title:"min",type:"number"},precision:{title:"precision",type:"number"},size:{enum:["large","middle","small"],title:"size",type:"string"},step:{title:"step",type:"number"}},required:["inputType"],title:"InputNumberSpec",type:"object",additionalProperties:!1},InstructionsTaskSpec:{additionalProperties:!1,properties:{content:{description:"Main static content of the page (eg. consent terms, instructions)",title:"content",oneOf:[{$ref:"#/definitions/MarkdownContentRawSpec"},{$ref:"#/definitions/MarkdownContentLinkSpec"}],discriminator:{propertyName:"type"},required:["type"]},countdown:{default:0,description:"Seconds countdown after start condition met.",title:"countdown",type:"number"},form:{$ref:"#/definitions/FormSpec<InputSpec>",description:"a form to display after the content.",title:"form"},instructions:{description:"Instructions to be displayed for the node",title:"instructions",type:"string"},instructions_type:{default:"'default'",description:"How the instructions will be displayed",enum:["default","popped"],title:"instructions_type",type:"string"},max_submissions:{default:0,description:"Maximum number of submissions a user can make for the task.",title:"max_submissions",type:"number"},n_pause:{description:"If the number of subjects is n_pause or less, the task will be paused",title:"n_pause",type:"number"},n_start:{description:"Number of jorneys required to start task",title:"n_start",type:"number"},name:{title:"name",type:"string"},prerequisite:{default:"False",description:"Node is marked as a prerrequisite\nPrerrequisite nodes must be completed before the rests of the nodes in the HIT are revealed.",title:"prerequisite",type:"boolean"},required:{default:"True",description:"If true, this node must have a valid submission before the HIT can be submitted",title:"required",type:"boolean"},timer:{description:"Time to complete the task",title:"timer",type:"number"},timer_empty:{description:"Empty timer is started everytime the task is empty (no journeys online)\nIf the timer reaches zero, the task is set to finished state.",title:"timer_empty",type:"number"},timer_pausable:{description:"If true, the timer will pause when the task is paused.",title:"timer_pausable",type:"boolean"},timer_pause:{description:"Pause timer is started every time the task enters paused state\nIf timer reaches zero, the task is set to finished state.",title:"timer_pause",type:"number"},type:{default:"InstructionsTask",enum:["InstructionsTask"],title:"type",type:"string"},useSharedState:{description:"If true, the task state will be synced between clients.\nThis applies both to multiple clients in the same journey and across journeys.\nInternally covfee uses socketio to synchronize task state.",title:"useSharedState",type:"boolean"},wait_for_ready:{description:"If true, all journeys must click ready to start the task",title:"wait_for_ready",type:"boolean"}},required:["content","name","type"],title:"InstructionsTaskSpec",type:"object"},JourneySpec:{properties:{nodes:{description:"path followed by the journey, as a list of node IDs",items:{type:"number"},title:"nodes",type:"array"}},required:["nodes"],title:"JourneySpec",type:"object"},MarkdownContentLinkSpec:{additionalProperties:!1,description:"Supplied is a link to a Markdown/HTML file.",properties:{type:{default:"link",enum:["link"],title:"type",type:"string"},url:{description:"A url pointing to a valid Markdown/HTML file.",title:"url",type:"string"}},required:["type","url"],title:"MarkdownContentLinkSpec",type:"object"},MarkdownContentRawSpec:{additionalProperties:!1,description:"Props for raw Markdown/HTML data",properties:{content:{description:"A valid Markdown/HTML string",title:"content",type:"string"},type:{default:"raw",enum:["raw"],title:"type",type:"string"}},required:["content","type"],title:"MarkdownContentRawSpec",type:"object"},ProjectSpec:{additionalProperties:!1,properties:{email:{description:"email of the contact person for the project.",title:"email",type:"string"},hits:{description:"List of HIT specifications, one for each Human Intelligence Task in this project.",items:{$ref:"#/definitions/HitSpec"},title:"hits",type:"array"},id:{description:"unique ID of the project",title:"id",type:"number"},name:{description:"name of the project, used to identify it in the covfee interface.",title:"name",type:"string"}},required:["email","hits","id","name"],title:"ProjectSpec",type:"object"},QuestionnaireTaskSpec:{additionalProperties:!1,properties:{countdown:{default:0,description:"Seconds countdown after start condition met.",title:"countdown",type:"number"},disabledUntilEnd:{description:"If true, the form will only become active after the media playback ends",title:"disabledUntilEnd",type:"boolean"},form:{$ref:"#/definitions/FormSpec<InputSpec>",description:"Specification of the form to be created.",title:"form"},instructions:{description:"Instructions to be displayed for the node",title:"instructions",type:"string"},instructions_type:{default:"'default'",description:"How the instructions will be displayed",enum:["default","popped"],title:"instructions_type",type:"string"},max_submissions:{default:0,description:"Maximum number of submissions a user can make for the task.",title:"max_submissions",type:"number"},media:{description:"Media file to be displayed.",title:"media",oneOf:[{$ref:"#/definitions/BasicVideo"},{$ref:"#/definitions/BasicAudio"}],discriminator:{propertyName:"type"},required:["type"]},n_pause:{description:"If the number of subjects is n_pause or less, the task will be paused",title:"n_pause",type:"number"},n_start:{description:"Number of jorneys required to start task",title:"n_start",type:"number"},name:{title:"name",type:"string"},prerequisite:{default:"False",description:"Node is marked as a prerrequisite\nPrerrequisite nodes must be completed before the rests of the nodes in the HIT are revealed.",title:"prerequisite",type:"boolean"},required:{default:"True",description:"If true, this node must have a valid submission before the HIT can be submitted",title:"required",type:"boolean"},timer:{description:"Time to complete the task",title:"timer",type:"number"},timer_empty:{description:"Empty timer is started everytime the task is empty (no journeys online)\nIf the timer reaches zero, the task is set to finished state.",title:"timer_empty",type:"number"},timer_pausable:{description:"If true, the timer will pause when the task is paused.",title:"timer_pausable",type:"boolean"},timer_pause:{description:"Pause timer is started every time the task enters paused state\nIf timer reaches zero, the task is set to finished state.",title:"timer_pause",type:"number"},type:{default:"QuestionnaireTask",enum:["QuestionnaireTask"],title:"type",type:"string"},useSharedState:{description:"If true, the task state will be synced between clients.\nThis applies both to multiple clients in the same journey and across journeys.\nInternally covfee uses socketio to synchronize task state.",title:"useSharedState",type:"boolean"},wait_for_ready:{description:"If true, all journeys must click ready to start the task",title:"wait_for_ready",type:"boolean"}},required:["form","name","type"],title:"QuestionnaireTaskSpec",type:"object"},RadioSpec:{description:"Props for the antd radio",properties:{buttonStyle:{enum:["outline","solid"],title:"buttonStyle",type:"string"},defaultValue:{title:"defaultValue",type:"string"},inputType:{default:"Radio.Group",enum:["Radio.Group"],title:"inputType",type:"string"},optionType:{enum:["button","default"],title:"optionType",type:"string"},options:{anyOf:[{items:{type:"string"},type:"array"},{items:{type:"number"},type:"array"},{items:{properties:{disabled:{title:"disabled",type:"boolean"},label:{title:"label",type:"string"},value:{title:"value",type:"string"}},required:["label","value"],type:"object"},type:"array"}],title:"options"},size:{enum:["large","middle","small"],title:"size",type:"string"}},required:["inputType","options"],title:"RadioSpec",type:"object",additionalProperties:!1},SliderSpec:{description:"Props for the antd slider",properties:{defaultValue:{description:"Initial slider value",title:"defaultValue",type:"number"},dots:{description:"Whether the thumb can drag over tick only",title:"dots",type:"boolean"},included:{description:"Make effect when marks not null, true means containment and false means coordinative",title:"included",type:"boolean"},inputType:{default:"Slider",enum:["Slider"],title:"inputType",type:"string"},marks:{additionalProperties:!0,default:'{0: "0", 1: "1", 2: "2"}',properties:{},title:"marks",type:"object"},max:{default:7,description:"The maximum value the slider can slide to",title:"max",type:"number"},min:{default:0,description:"The minimum value the slider can slide to",title:"min",type:"number"},range:{description:"Dual thumb mode",title:"range",type:"boolean"},step:{default:1,description:"The granularity the slider can step through values. Must greater than 0, and be divided by (max - min) . When marks no null, step can be null",title:"step",type:"number"},tooltipPlacement:{description:"Position of the tooltip",enum:["bottom","bottomLeft","bottomRight","left","leftBottom","leftTop","right","rightBottom","rightTop","top","topLeft","topRight"],title:"tooltipPlacement",type:"string"},tooltipVisible:{description:"If true, Tooltip will show always, or it will not show anyway, even if dragging or hovering",title:"tooltipVisible",type:"boolean"},vertical:{description:"If true, the slider will be vertical",title:"vertical",type:"boolean"}},required:["inputType"],title:"SliderSpec",type:"object",additionalProperties:!1},TextareaSpec:{description:"Props for the antd textarea field",properties:{allowClear:{description:"Allows the content to be cleared via clear icon",title:"allowClear",type:"boolean"},autoSize:{description:"Adjusts height based on content",title:"autoSize",type:"boolean"},bordered:{description:"If true, adds a border style",title:"bordered",type:"boolean"},defaultValue:{description:"Initial content",title:"defaultValue",type:"string"},inputType:{default:"Input.TextArea",enum:["Input.TextArea"],title:"inputType",type:"string"},maxLength:{description:"Max length of content (in chars)",title:"maxLength",type:"number"},showCount:{description:"If true, shows the char count",title:"showCount",type:"boolean"}},required:["inputType"],title:"TextareaSpec",type:"object",additionalProperties:!1},TutorialTaskSpec:{additionalProperties:!1,properties:{countdown:{default:0,description:"Seconds countdown after start condition met.",title:"countdown",type:"number"},instructions:{description:"Instructions to be displayed for the node",title:"instructions",type:"string"},instructions_type:{default:"'default'",description:"How the instructions will be displayed",enum:["default","popped"],title:"instructions_type",type:"string"},max_submissions:{default:0,description:"Maximum number of submissions a user can make for the task.",title:"max_submissions",type:"number"},n_pause:{description:"If the number of subjects is n_pause or less, the task will be paused",title:"n_pause",type:"number"},n_start:{description:"Number of jorneys required to start task",title:"n_start",type:"number"},name:{title:"name",type:"string"},prerequisite:{default:"False",description:"Node is marked as a prerrequisite\nPrerrequisite nodes must be completed before the rests of the nodes in the HIT are revealed.",title:"prerequisite",type:"boolean"},required:{default:"True",description:"If true, this node must have a valid submission before the HIT can be submitted",title:"required",type:"boolean"},showPhoneField:{description:"Media file to be displayed.",title:"showPhoneField",type:"boolean"},timer:{description:"Time to complete the task",title:"timer",type:"number"},timer_empty:{description:"Empty timer is started everytime the task is empty (no journeys online)\nIf the timer reaches zero, the task is set to finished state.",title:"timer_empty",type:"number"},timer_pausable:{description:"If true, the timer will pause when the task is paused.",title:"timer_pausable",type:"boolean"},timer_pause:{description:"Pause timer is started every time the task enters paused state\nIf timer reaches zero, the task is set to finished state.",title:"timer_pause",type:"number"},type:{default:"TutorialTask",enum:["TutorialTask"],title:"type",type:"string"},useSharedState:{description:"If true, the task state will be synced between clients.\nThis applies both to multiple clients in the same journey and across journeys.\nInternally covfee uses socketio to synchronize task state.",title:"useSharedState",type:"boolean"},wait_for_ready:{description:"If true, all journeys must click ready to start the task",title:"wait_for_ready",type:"boolean"}},required:["name","type"],title:"TutorialTaskSpec",type:"object"},VideocallTaskSpec:{additionalProperties:!1,properties:{allowMute:{default:!0,description:"Allow the user to mute their own audio",title:"allowMute",type:"boolean"},allowScreenShare:{default:!0,description:"Allow the user to share their screen",title:"allowScreenShare",type:"boolean"},allowStopVideo:{default:!0,description:"Allow the user to stop their own video",title:"allowStopVideo",type:"boolean"},countdown:{default:0,description:"Seconds countdown after start condition met.",title:"countdown",type:"number"},instructions:{description:"Instructions to be displayed for the node",title:"instructions",type:"string"},instructions_type:{default:"'default'",description:"How the instructions will be displayed",enum:["default","popped"],title:"instructions_type",type:"string"},layout:{default:"'grid",description:"Layout mode",enum:["grid"],title:"layout",type:"string"},max_submissions:{default:0,description:"Maximum number of submissions a user can make for the task.",title:"max_submissions",type:"number"},muted:{default:!1,description:"Videocall is muted",title:"muted",type:"boolean"},n_pause:{description:"If the number of subjects is n_pause or less, the task will be paused",title:"n_pause",type:"number"},n_start:{description:"Number of jorneys required to start task",title:"n_start",type:"number"},name:{title:"name",type:"string"},prerequisite:{default:"False",description:"Node is marked as a prerrequisite\nPrerrequisite nodes must be completed before the rests of the nodes in the HIT are revealed.",title:"prerequisite",type:"boolean"},required:{default:"True",description:"If true, this node must have a valid submission before the HIT can be submitted",title:"required",type:"boolean"},serverRecording:{description:"Recording options for OpenVIDU",properties:{enable:{description:"Enable server recording",title:"enable",type:"boolean"},frameRate:{default:25,description:"Only applies for COMPOSED output mode",title:"frameRate",type:"number"},hasAudio:{description:"Record audio",title:"hasAudio",type:"boolean"},hasVideo:{description:"Record video",title:"hasVideo",type:"boolean"},outputMode:{description:"record all streams in a single file in a grid layout or record each stream in its own separate file.",enum:["COMPOSED","COMPOSED_QUICK_START","INDIVIDUAL"],title:"outputMode",type:"string"},resolution:{default:"1280x720",description:"Video resolution. Only applies for COMPOSED output mode",title:"resolution",type:"string"}},required:["enable","frameRate","hasAudio","hasVideo","outputMode","resolution"],title:"serverRecording",type:"object"},timer:{description:"Time to complete the task",title:"timer",type:"number"},timer_empty:{description:"Empty timer is started everytime the task is empty (no journeys online)\nIf the timer reaches zero, the task is set to finished state.",title:"timer_empty",type:"number"},timer_pausable:{description:"If true, the timer will pause when the task is paused.",title:"timer_pausable",type:"boolean"},timer_pause:{description:"Pause timer is started every time the task enters paused state\nIf timer reaches zero, the task is set to finished state.",title:"timer_pause",type:"number"},type:{default:"VideocallTask",enum:["VideocallTask"],title:"type",type:"string"},useSharedState:{description:"If true, the task state will be synced between clients.\nThis applies both to multiple clients in the same journey and across journeys.\nInternally covfee uses socketio to synchronize task state.",title:"useSharedState",type:"boolean"},videoOff:{default:!1,description:"Call is audio only\nvideo is always off",title:"videoOff",type:"boolean"},wait_for_ready:{description:"If true, all journeys must click ready to start the task",title:"wait_for_ready",type:"boolean"}},required:["layout","name","type"],title:"VideocallTaskSpec",type:"object"},completionInfo:{properties:{completionCode:{description:"Completion code to give back to participants. Used for crowdsourcing in eg. Prolific",title:"completionCode",type:"string"},redirectName:{description:"Name/label of the website to redirect to",title:"redirectName",type:"string"},redirectUrl:{description:"Redirect URL. URL to redirect participants to after completing the HIT.",title:"redirectUrl",type:"string"}},title:"completionInfo",type:"object"}}},l=e=>{let{schema:t}=e;return(0,n.jsxs)("div",{style:{marginLeft:"20px",borderLeft:"2px solid #ccc",paddingLeft:"20px"},children:[(0,n.jsx)("h4",{children:t.title}),(0,n.jsxs)("p",{children:["Type: ",t.type]}),void 0!==t.default&&(0,n.jsxs)("p",{children:["Default: ",t.default]}),t.description&&(0,n.jsxs)("p",{children:["Description: ",t.description]}),t.properties&&(0,n.jsx)(p,{schema:t})]})},p=e=>{let{schema:t}=e;const i=t.properties||{};return(0,n.jsx)("div",{children:Object.entries(i).map((e=>{let[t,i]=e;return(0,n.jsx)(l,{schema:i},t)}))})},d=e=>{let{name:t}=e;const i=r.useMemo((()=>(console.log(a.definitions),console.log(t),console.log(a.definitions[t]),t in a.definitions?a.definitions[t]:null)),[t]);return r.useEffect((()=>{console.log(i)})),(0,n.jsx)(p,{schema:i})},u={title:"OpenVIMO video calling"},c=void 0,m={id:"tasks/openvimo",title:"OpenVIMO video calling",description:"OpenVIMO is a platform for videocalling built as a covfee task. It's main application is recording of online social interaction such as pair conversations or online meetings. Among its features are:",source:"@site/docs/tasks/openvimo.mdx",sourceDirName:"tasks",slug:"/tasks/openvimo",permalink:"/covfee/docs/tasks/openvimo",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/edit/master/website/docs/tasks/openvimo.mdx",tags:[],version:"current",frontMatter:{title:"OpenVIMO video calling"},sidebar:"docs",previous:{title:"Architecture",permalink:"/covfee/docs/architecture"}},f={},y=[{value:"Installation",id:"installation",level:2},{value:"Sample 1: meeting room",id:"sample-1-meeting-room",level:3},{value:"Sample 2: dyadic conversations",id:"sample-2-dyadic-conversations",level:3},{value:"Moving to production",id:"moving-to-production",level:2},{value:"Configuration options",id:"configuration-options",level:2}];function h(e){const t={a:"a",code:"code",h2:"h2",h3:"h3",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,o.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.p,{children:"OpenVIMO is a platform for videocalling built as a covfee task. It's main application is recording of online social interaction such as pair conversations or online meetings. Among its features are:"}),"\n",(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsx)(t.li,{children:"Different study designs can be specified in Python using a graph structure."}),"\n",(0,n.jsx)(t.li,{children:"Crowdsourcing support through covfee."}),"\n",(0,n.jsx)(t.li,{children:"Videocalls can be timed."}),"\n",(0,n.jsx)(t.li,{children:"Chat with data subjects."}),"\n",(0,n.jsx)(t.li,{children:"Admin can view the videocalls without interferring. Please use responsibly by informing data subjects if you intend to use this feature."}),"\n",(0,n.jsx)(t.li,{children:"Admin can pause, restart or force stop the videocalls."}),"\n"]}),"\n",(0,n.jsx)(t.h2,{id:"installation",children:"Installation"}),"\n",(0,n.jsxs)(t.p,{children:["Here we provide instructions for testing OpenVIMO in ",(0,n.jsx)(t.a,{href:"../development",children:"development mode"}),". To know how to move an OpenVIMO app to production, see ",(0,n.jsx)(t.a,{href:"#moving-to-production",children:"below"}),"."]}),"\n",(0,n.jsxs)(t.p,{children:["First install covfee following the ",(0,n.jsx)(t.a,{href:"/covfee/docs/development",children:"development install instructions"}),"."]}),"\n",(0,n.jsxs)(t.p,{children:["Open",(0,n.jsx)(t.strong,{children:"VIMO"})," is built on top of Open",(0,n.jsx)(t.strong,{children:"VIDU"}),", an open-source WebRTC framework with an on-premise server that integrates an API for handling calls, a STUN/TURN server and recording capabilities. The OpenVIDU server should be ran separately. To do it, follow ",(0,n.jsx)(t.a,{href:"https://docs.openvidu.io/en/stable/deployment/ce/on-premises/",children:"OpenVIDU deployment instructions"}),"."]}),"\n",(0,n.jsx)(t.h3,{id:"sample-1-meeting-room",children:"Sample 1: meeting room"}),"\n",(0,n.jsx)(t.p,{children:"Here we create a simple covfee app for meeting rooms with shareable URLs. This can function as a flexible deployment for holding (regular) meetings in covfee and recording them into a dataset."}),"\n",(0,n.jsx)(t.p,{children:"In covfee experiments (HITs) are always specified by a list of nodes or tasks, and a list of journeys or paths through those nodes. Each of these journeys maps to a URL, and normally to one participant. However, because in this case we want to allow an arbitrary number of participants to join the videocall using the same URL, we will create a single journey. The graph structure of this deployment is therefore very simple:"}),"\n",(0,n.jsx)("div",{class:"text--center",children:(0,n.jsx)("img",{src:(0,s.A)("/img/g_meeting.png"),width:"250"})}),"\n",(0,n.jsx)(t.p,{children:"First we will create a folder for the covfee project. This folder may be anywhere in the file system. Then we will create the following structure:"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{children:"my_folder\n    - meeting.py\n"})}),"\n",(0,n.jsxs)(t.p,{children:["The naming is not relevant. Paste the following into the ",(0,n.jsx)(t.code,{children:"meeting.py"}),":"]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-python",children:'from covfee import HIT, Project, tasks\nfrom covfee.config import config\nfrom covfee.shared.dataclass import CovfeeApp\n\nconfig.load_environment("local")\n\nspec_meeting = {\n    "name": "Videocall",\n    "serverRecording": {\n        "hasAudio": True,\n        "hasVideo": True,\n        "outputMode": "INDIVIDUAL",\n    },\n}\n\nt1 = tasks.VideocallTaskSpec(**spec_meeting)\nhit = HIT("Videocalling")\nhit.add_journey(nodes=[t1])\n\nprojects = [Project("My Project", email="example@example.com", hits=[hit])]\napp = CovfeeApp(projects)\n'})}),"\n",(0,n.jsxs)(t.p,{children:["Here we import the necessary classes, create a VideocallTaskSpecs object holding the specification of our videocalling task, and assign it to a journey, a HIT and a project (",(0,n.jsx)(t.a,{href:"../entities",children:"more information"}),"). Finally, we create the ",(0,n.jsx)(t.code,{children:"app"})," object. Covfee internally looks for this object by name (important that it is called ",(0,n.jsx)(t.code,{children:"app"}),") and uses it as starting point to read the specification."]}),"\n",(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsxs)(t.li,{children:["The full list of options for the VideocallTaskSpec is provided ",(0,n.jsx)(t.a,{href:"#configuration-options",children:"below"}),"."]}),"\n"]}),"\n",(0,n.jsx)(t.p,{children:"That is all! We are now ready to start Covfee. To run it in development mode:"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{children:"covfee make meeting.py --force --dev\n"})}),"\n",(0,n.jsx)(t.p,{children:"This will parse the specification, create the database, and start the covfee server."}),"\n",(0,n.jsxs)(t.p,{children:["And make sure to start webpack on another tab (",(0,n.jsx)(t.a,{href:"../development",children:"more info"}),"):"]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{children:"covfee webpack\n"})}),"\n",(0,n.jsxs)(t.p,{children:["After this the Covfee admin panel should be accessible in the URL displayed when running the Covfee server (",(0,n.jsx)(t.a,{href:"http://localhost:5000/admin#",children:"http://localhost:5000/admin#"})," by default)."]}),"\n",(0,n.jsxs)(t.p,{children:["For more information about running Covfee in development mode ",(0,n.jsx)(t.a,{href:"../development",children:"see here"}),"."]}),"\n",(0,n.jsx)(t.h3,{id:"sample-2-dyadic-conversations",children:"Sample 2: dyadic conversations"}),"\n",(0,n.jsx)(t.p,{children:"This sample creates a more complex HIT structure. Here we want two subjects to fill in individual consent forms, then have a videocall together, and then fill in post-experiment surveys. The graph structure for this interaction is:"}),"\n",(0,n.jsx)("div",{class:"text--center",children:(0,n.jsx)("img",{src:(0,s.A)("/img/g_dyadic.png"),width:"600"})}),"\n",(0,n.jsx)(t.p,{children:"We can code this structure with the following code:"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-python",children:'# from covfee import Task, HIT\nfrom covfee import HIT, Project, tasks\nfrom covfee.config import config\nfrom covfee.shared.dataclass import CovfeeApp\n\nconfig.load_environment("local")\n\nspec_consent_form = {\n    "name": "Consent",\n    "content": {"type": "link", "url": "$$www$$/consent.md"},\n    "form": {\n        "fields": [\n            {\n                "name": "name",\n                "label": "Full name:",\n                "required": True,\n                "input": {"inputType": "Input"},\n            },\n            {\n                "name": "consent",\n                "label": "To proceed, you must expressly provide consent per the terms above.",\n                "required": True,\n                "input": {\n                    "inputType": "Checkbox.Group",\n                    "options": [\n                        {\n                            "label": "I consent to the sharing of my personal data.",\n                            "value": "yes",\n                        }\n                    ],\n                },\n            },\n        ]\n    },\n}\n\nspec_instructions = {\n    "name": "Instructions",\n    "prerequisite": True,\n    "content": {"type": "link", "url": "$$www$$/instructions.md"},\n    "form": {\n        "fields": [\n            {\n                "name": "agreement",\n                "label": "To proceed, you must expressly agree to the provided instructions.",\n                "required": True,\n                "input": {\n                    "inputType": "Checkbox.Group",\n                    "options": [\n                        {\n                            "label": "I agree with the provided instructions.",\n                            "value": "yes",\n                        }\n                    ],\n                },\n            }\n        ]\n    },\n}\n\nspec_videocall = {\n    "name": "Videocall",\n}\n\nspec_final_survey = {\n    "name": "Final Survey",\n    "form": {\n        "fields": [\n            {\n                "name": "enjoyment",\n                "label": "Did you enjoy your interaction?",\n                "required": True,\n                "input": {\n                    "inputType": "Radio.Group",\n                    "options": ["Yes", "No"],\n                },\n            }\n        ]\n    },\n}\nj1_consent = tasks.InstructionsTaskSpec(**spec_consent_form)\nj1_instructions = tasks.InstructionsTaskSpec(**spec_instructions)\nj1_final = tasks.QuestionnaireTaskSpec(**spec_final_survey)\n\nj2_consent = tasks.InstructionsTaskSpec(**spec_consent_form)\nj2_instructions = tasks.InstructionsTaskSpec(**spec_instructions)\nj2_final = tasks.QuestionnaireTaskSpec(**spec_final_survey)\n\nvideocall_task = tasks.VideocallTaskSpec(**spec_videocall)\n\n\nhit = HIT("Dyadic videocall")\nj1 = hit.add_journey(nodes=[j1_consent, j1_instructions, videocall_task, j1_final])\nj1 = hit.add_journey(nodes=[j2_consent, j2_instructions, videocall_task, j2_final])\n\nprojects = [Project("My Project", email="example@example.com", hits=[hit])]\napp = CovfeeApp(projects)\n\n'})}),"\n",(0,n.jsx)(t.h2,{id:"moving-to-production",children:"Moving to production"}),"\n",(0,n.jsxs)(t.ol,{children:["\n",(0,n.jsxs)(t.li,{children:["\n",(0,n.jsxs)(t.p,{children:["Make sure that OpenVIDU is installed in your server in production mode. Recording requires a server with significant ",(0,n.jsx)(t.a,{href:"https://docs.openvidu.io/en/stable/deployment/ce/on-premises/",children:"resources and open ports"}),"."]}),"\n"]}),"\n",(0,n.jsxs)(t.li,{children:["\n",(0,n.jsxs)(t.p,{children:["Move your covfee app to production by following Covfee's ",(0,n.jsx)(t.a,{href:"../deployment",children:"deployment instructions"}),"."]}),"\n"]}),"\n"]}),"\n",(0,n.jsx)(t.h2,{id:"configuration-options",children:"Configuration options"}),"\n",(0,n.jsx)(t.p,{children:"The full list of configuration options for the videocalling task:"}),"\n",(0,n.jsx)(d,{name:"VideocallTaskSpec"})]})}function b(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(h,{...e})}):h(e)}},8453:(e,t,i)=>{i.d(t,{R:()=>r,x:()=>a});var n=i(6540);const o={},s=n.createContext(o);function r(e){const t=n.useContext(s);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:r(e.components),n.createElement(s.Provider,{value:t},e.children)}}}]);